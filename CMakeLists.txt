########### CMakeMaker autogenerated file ###########
cmake_minimum_required(VERSION 3.0)
project(cmakemaker_solution C CXX)


macro(add_msvc_precompiled_header PrecompiledHeader PrecompiledSource SourcesVar)
  if(MSVC)
    get_filename_component(PrecompiledBasename ${PrecompiledHeader} NAME_WE)
    set(PrecompiledBinary "$(IntDir)/${PrecompiledBasename}.pch")
    set(Sources ${${SourcesVar}})
    set_source_files_properties(${Sources}
      PROPERTIES COMPILE_FLAGS "/Yu\"${PrecompiledHeader}\" /FI\"${PrecompiledHeader}\" /Fp\"${PrecompiledBinary}\""
      OBJECT_DEPENDS "${PrecompiledBinary}")
    set_source_files_properties(${PrecompiledSource}
      PROPERTIES COMPILE_FLAGS "/Yc\"${PrecompiledHeader}\" /FI\"${PrecompiledHeader}\" /Fp\"${PrecompiledBinary}\""
      OBJECT_OUTPUTS "${PrecompiledBinary}")
    list(APPEND ${SourcesVar} ${PrecompiledSource})
  endif(MSVC)
endmacro(add_msvc_precompiled_header)

set (LIBRARY_OUTPUT_PATH Build_Output/libs CACHE PATH "Lib path")
set(EXECUTABLE_OUTPUT_PATH Build_Output/bin CACHE PATH "Exe path")
mark_as_advanced(LIBRARY_OUTPUT_PATH EXECUTABLE_OUTPUT_PATH)
add_definitions(-DUNICODE -D_UNICODE)

if (WIN32)
  add_definitions(-DWindowsBuild)
  set(CMAKE_CXX_FLAGS_RELEASE  "${CMAKE_CXX_FLAGS_RELEASE} -MP")
else(WIN32)
  add_definitions(-DUnixBuild)
  set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -fPIC")
endif(WIN32)

add_subdirectory(./cmd_cmakemaker)
add_subdirectory(./test_testdriver)
